<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleIdentifier</key>
	<string></string>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>com.sdl.base</string>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template builds a command-line tool.</string>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.base</string>
		<string>com.apple.dt.unit.macBase</string>
	</array>
	<key>Project</key>
	<dict>
		<key>SharedSettings</key>
		<dict>
			<key>FRAMEWORK_SEARCH_PATHS</key>
			<array>
				<string>/Library/Frameworks</string>
			</array>
		</dict>
	</dict>
	<key>Targets</key>
	<array>
		<dict>
			<key>Frameworks</key>
			<array>
				<string>Cocoa</string>
			</array>
			<key>ProductType</key>
			<string>com.apple.product-type.tool</string>
			<key>BuildPhases</key>
			<array>
				<dict>
					<key>Class</key>
					<string>Sources</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>Frameworks</string>
				</dict>
				<dict>
					<key>Class</key>
					<string>CopyFiles</string>
					<key>DstPath</key>
					<string>/usr/share/man/man1/</string>
					<key>DstSubfolderSpec</key>
					<string>0</string>
					<key>RunOnlyForDeploymentPostprocessing</key>
					<string>YES</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>Definitions</key>
	<dict>
		<key>main.cpp</key>
		<dict>
			<key>Path</key>
			<string>main.cpp</string>
		</dict>
		<key>SDLMain.m</key>
		<dict>
			<key>Path</key>
			<string>SDLMain.m</string>
		</dict>
		<key>SDLMain.h</key>
		<dict>
			<key>Path</key>
			<string>SDLMain.h</string>
		</dict>
	</dict>
	<key>Nodes</key>
	<array>
		<string>main.cpp</string>
		<string>SDLMain.m</string>
		<string>SDLMain.h</string>
	</array>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>commandLineType</string>
			<key>Name</key>
			<string>Type</string>
			<key>Description</key>
			<string>The type of command-line tool to create</string>
			<key>Default</key>
			<string>C</string>
			<key>Type</key>
			<string>popup</string>
			<key>Units</key>
			<dict>
				<key>C</key>
				<dict>
					<key>Nodes</key>
					<array>
						<string>main.c:comments</string>
						<string>main.c:include</string>
						<string>main.c:main:content</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.c:include</key>
						<string>#include &lt;stdio.h&gt;
</string>
						<key>main.c:main:content</key>
						<string>// insert code here...
printf(&quot;Hello, World!\n&quot;);
</string>
					</dict>
				</dict>
				<key>C++</key>
				<dict>
					<key>Nodes</key>
					<array>
						<string>main.cpp:comments</string>
						<string>main.cpp:include</string>
						<string>main.cpp:main:content</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.cpp:include</key>
						<string>#include &lt;iostream&gt;
</string>
						<key>main.cpp:main:content</key>
						<string>// insert code here...
std::cout &lt;&lt; &quot;Hello, World!\n&quot;;
</string>
					</dict>
				</dict>
				<key>Core Data</key>
				<dict>
					<key>Targets</key>
					<array>
						<dict>
							<key>SharedSettings</key>
							<dict>
								<key>GCC_PRECOMPILE_PREFIX_HEADER</key>
								<string>YES</string>
								<key>GCC_PREFIX_HEADER</key>
								<string>___PACKAGENAME___/___PACKAGENAME___-Prefix.pch</string>
							</dict>
							<key>Frameworks</key>
							<array>
								<string>CoreData</string>
								<string>Foundation</string>
							</array>
						</dict>
					</array>
					<key>Nodes</key>
					<array>
						<string>main.m:comments</string>
						<string>main.m:coreData</string>
						<string>main.m:main:content</string>
						<string>___PACKAGENAME___-Prefix.pch:objC:importFoundation</string>
						<string>___PACKAGENAME___-Prefix.pch:objC:importCoreData</string>
						<string>___PACKAGENAMEASIDENTIFIER___.xcdatamodeld</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.m:main:content</key>
						<string>@autoreleasepool {
    // Create the managed object context
    NSManagedObjectContext *context = managedObjectContext();
    
    // Custom code here...
    // Save the managed object context
    NSError *error = nil;
    if (![context save:&amp;error]) {
        NSLog(@&quot;Error while saving %@&quot;, ([error localizedDescription] != nil) ? [error localizedDescription] : @&quot;Unknown Error&quot;);
        exit(1);
    }
}
</string>
						<key>main.m:coreData</key>
						<string>static NSManagedObjectModel *managedObjectModel()
{
    static NSManagedObjectModel *model = nil;
    if (model != nil) {
        return model;
    }
    
    NSString *path = @&quot;___PACKAGENAMEASIDENTIFIER___&quot;;
    path = [path stringByDeletingPathExtension];
    NSURL *modelURL = [NSURL fileURLWithPath:[path stringByAppendingPathExtension:@&quot;momd&quot;]];
    model = [[NSManagedObjectModel alloc] initWithContentsOfURL:modelURL];
    
    return model;
}

static NSManagedObjectContext *managedObjectContext()
{
    static NSManagedObjectContext *context = nil;
    if (context != nil) {
        return context;
    }

    @autoreleasepool {
        context = [[NSManagedObjectContext alloc] init];
        
        NSPersistentStoreCoordinator *coordinator = ___RP___[[NSPersistentStoreCoordinator alloc] initWithManagedObjectModel:managedObjectModel()]___AR___;
        [context setPersistentStoreCoordinator:coordinator];
        
        NSString *STORE_TYPE = NSSQLiteStoreType;
        
        NSString *path = [[NSProcessInfo processInfo] arguments][0];
        path = [path stringByDeletingPathExtension];
        NSURL *url = [NSURL fileURLWithPath:[path stringByAppendingPathExtension:@&quot;sqlite&quot;]];
        
        NSError *error;
        NSPersistentStore *newStore = [coordinator addPersistentStoreWithType:STORE_TYPE configuration:nil URL:url options:nil error:&amp;error];
        
        if (newStore == nil) {
            NSLog(@&quot;Store Configuration Failure %@&quot;, ([error localizedDescription] != nil) ? [error localizedDescription] : @&quot;Unknown Error&quot;);
        }
    }
    return context;
}
</string>
						<key>___PACKAGENAME___-Prefix.pch:objC:importCoreData</key>
						<string>#import &lt;CoreData/CoreData.h&gt;</string>
						<key>___PACKAGENAMEASIDENTIFIER___.xcdatamodeld</key>
						<dict>
							<key>Path</key>
							<string>___PACKAGENAMEASIDENTIFIER___.xcdatamodeld</string>
						</dict>
					</dict>
				</dict>
				<key>Core Foundation</key>
				<dict>
					<key>Targets</key>
					<array>
						<dict>
							<key>Frameworks</key>
							<array>
								<string>CoreFoundation</string>
							</array>
						</dict>
					</array>
					<key>Nodes</key>
					<array>
						<string>main.c:comments</string>
						<string>main.c:include</string>
						<string>main.c:main:content</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.c:include</key>
						<string>#include &lt;CoreFoundation/CoreFoundation.h&gt;
</string>
						<key>main.c:main:content</key>
						<string>// insert code here...
CFShow(CFSTR(&quot;Hello, World!\n&quot;));
</string>
					</dict>
				</dict>
				<key>Core Services</key>
				<dict>
					<key>Targets</key>
					<array>
						<dict>
							<key>Frameworks</key>
							<array>
								<string>CoreServices</string>
							</array>
						</dict>
					</array>
					<key>Nodes</key>
					<array>
						<string>main.c:comments</string>
						<string>main.c:include</string>
						<string>main.c:main:content</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.c:include</key>
						<string>#include &lt;CoreServices/CoreServices.h&gt;
</string>
						<key>main.c:main:content</key>
						<string>// insert code here...
printf(&quot;Hello, World!\n&quot;);
</string>
					</dict>
				</dict>
				<key>Foundation</key>
				<dict>
					<key>Targets</key>
					<array>
						<dict>
							<key>SharedSettings</key>
							<dict>
								<key>GCC_PRECOMPILE_PREFIX_HEADER</key>
								<string>YES</string>
								<key>GCC_PREFIX_HEADER</key>
								<string>___PACKAGENAME___/___PACKAGENAME___-Prefix.pch</string>
							</dict>
							<key>Frameworks</key>
							<array>
								<string>Foundation</string>
							</array>
						</dict>
					</array>
					<key>Nodes</key>
					<array>
						<string>main.m:comments</string>
						<string>main.m:include</string>
						<string>main.m:main:content</string>
						<string>___PACKAGENAME___-Prefix.pch:objC:importFoundation</string>
					</array>
					<key>Definitions</key>
					<dict>
						<key>main.m:include</key>
						<string>#import &lt;Foundation/Foundation.h&gt;
</string>
						<key>main.m:main:content</key>
						<string>@autoreleasepool {
    
    // insert code here...
    NSLog(@&quot;Hello, World!&quot;);
    
}
</string>
					</dict>
				</dict>
			</dict>
		</dict>
	</array>
</dict>
</plist>
