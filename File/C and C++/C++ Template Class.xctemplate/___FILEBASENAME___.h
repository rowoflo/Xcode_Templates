/*
 -------------------------------------------------------------------------------
 ___FILENAME___
 ___PROJECTNAME___ Project
 
 CLASS NAME:
    ___FILEBASENAME___
 
 DESCRIPTION:
    description...
 
 FILES:
    ___FILEBASENAME___.h
    ___FILEBASENAME___.cpp
 
 DEPENDENCIES:
 
 
 CONSTRUCTORS:
    ___FILEBASENAME___();    
 
 PUBLIC PROPERTIES:
    prop1 - description... .
 
    prop2 - description... .
 
 PUBLIC METHODS:
    type method1(type arg1);
        Description... .
            arg1 - description... .
 
 NOTES:
 
 
 EXAMPLES:
    Example 1: description
    ----------------------------------------------------------------------------
    code...
    ----------------------------------------------------------------------------
 
 
 VERSIONS:
    1.0 - ___DATE___ - ___FULLUSERNAME___ (___WEBSITE___)
 
 -------------------------------------------------------------------------------
 */

#ifndef ____FILEBASENAME____h_
#define ____FILEBASENAME____h_

//------------------------------------------------------------------------------
// Includes
//------------------------------------------------------------------------------


template <typename T>
class ___FILEBASENAME___ {
    //--------------------------------------------------------------------------
    // Friends
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Friend Overloaded Operators
    //--------------------------------------------------------------------------
    
    
public:
    //--------------------------------------------------------------------------
    // Constants, Enums, and Types
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Lifecycle
    //--------------------------------------------------------------------------
    
    // Constructors
    ___FILEBASENAME___();
    
    // Destructor
    virtual ~___FILEBASENAME___();
    
    // Copy constructor
    ___FILEBASENAME___(const ___FILEBASENAME___<T>& srcObj);
    
    // Assignment operator
    const ___FILEBASENAME___& operator=(const ___FILEBASENAME___<T>& rhsObj);
    
    
    //--------------------------------------------------------------------------
    // Overloaded Operators
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Public Member Functions
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Public Member Variables
    //--------------------------------------------------------------------------
    
    
    
protected:
    //--------------------------------------------------------------------------
    // Protected Member Functions
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Protected Member Variables
    //--------------------------------------------------------------------------
    
    
    
private:
    //--------------------------------------------------------------------------
    // Lifecycle
    //--------------------------------------------------------------------------
    void copyHelper(const ___FILEBASENAME___<T>& srcObj);
    
    //--------------------------------------------------------------------------
    // Private Member Functions
    //--------------------------------------------------------------------------
    
    
    //--------------------------------------------------------------------------
    // Private Member Variables
    //--------------------------------------------------------------------------
    
    
    
};

#include "___FILEBASENAME___.cpp"

#endif